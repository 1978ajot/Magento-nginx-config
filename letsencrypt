yum --enablerepo=epel-testing install letsencrypt

cat > /root/letsencrypt_request <<END
DOMAIN="myshop.com"

letsencrypt certonly --standalone -d ${DOMAIN} -d www.${DOMAIN}

CERT_DUE=$(openssl x509 -enddate -noout -in /etc/letsencrypt/live/${DOMAIN}/cert.pem | cut -d'=' -f2 | awk '{print $1,$2}')
CRON_SET=$(date --date "${CERT_DUE} - 14 days" | awk '{print $3,$2,$1}')

crontab -l >> CRON_JOBS
sed -i "/.*letsencrypt_renew.*/d" CRON_JOBS
echo "0 0 ${CRON_SET,,} /bin/bash /root/letsencrypt_renew" >> CRON_JOBS
crontab CRON_JOBS
END




cat > /root/letsencrypt_renew <<END
#!/bin/bash
DOMAIN="myshop.com"
ADMINMAIL="you@youremailid.com"

service nginx stop
letsencrypt renew --standalone > /root/letsencrypt_renew.log 2>&1
service nginx start

CERT_DUE=$(openssl x509 -enddate -noout -in /etc/letsencrypt/live/${DOMAIN}/cert.pem | cut -d'=' -f2 | awk '{print $1,$2}')
CRON_SET=$(date --date "${CERT_DUE} - 14 days" | awk '{print $3,$2,$1}')

crontab -l >> CRON_JOBS
sed -i "/.*letsencrypt_renew.*/d" CRON_JOBS
echo "0 0 ${CRON_SET,,} /bin/bash /root/letsencrypt_renew" >> CRON_JOBS
crontab CRON_JOBS
echo "Certificate for ${DOMAIN} due date: ${CERT_DUE}" | mail -s "${DOMAIN}: new ssl certificate installed" ${ADMINMAIL}
END
