user  www-data;
worker_processes  1; ## = CPU qty

error_log   /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    use epoll;
}

http   {
    index index.html index.php; ## Allow a static html file to be shown first
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
	
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
					  
    #log_format error403  '$remote_addr - $remote_user [$time_local] '
    #                 '$status "$request"  "$http_x_forwarded_for"';					  

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    server_tokens   off;
    gzip            on;
    gzip_comp_level 8;
    gzip_min_length 1024;
    keepalive_timeout  15;
	
	## use when Varnish in front
	#set_real_ip_from 127.0.0.1;
	#real_ip_header X-Forwarded-For;
	
	## Multi domain configuration
	#map $http_host $storecode { 
	#www.domain1.com 1store_code; ## US main
	#www.domain2.net 2store_code; ## EU store
	#www.domain3.de 3store_code; ## German store
	#www.domain4.com 4store_code; ## different products
	#   }

server {
    listen 80; ## change to 8080 with Varnish
    #listen 443 ssl; 
    server_name _; ## Domain is here
    root /var/www/html;
    access_log  /var/log/nginx/access.log  main;
    
	## Nginx will not add the port in the url when the request is redirected.
    #port_in_redirect off; 
	
    ## SSL directives go here
    #ssl_certificate     /etc/ssl/certs/www_server_com.chained.crt; ## cat server.crt bundle.ca.crt >> www_server_com.chained.crt
    #ssl_certificate_key /etc/ssl/certs/server.key;

    #ssl_session_cache shared:SSL:15m;
    #ssl_session_timeout 15m;

    #ssl_protocols             SSLv3 TLSv1;
    #ssl_ciphers               HIGH:!ADH:!EXPORT56;
    #ssl_prefer_server_ciphers on;
	
	# server maintenance block. insert dev ip 1.2.3.4 static address www.whatismyip.com
    #    if ($remote_addr != "1.2.3.4") { 
    #       return 503;
    #       }
    #     error_page 503 @maintenance;
    #     	location @maintenance {
    #     		rewrite ^(.*)$ /error_page/503.html break;
	#     		internal;
	#     		access_log off;
	#     		log_not_found off;
    #     }
	
    location / {
        try_files $uri $uri/ @handler;
        }
		
    ## These locations would be hidden by .htaccess normally
	 location ~ (/(app/|includes/|/pkginfo/|var/|errors/local.xml)|/\.svn/|/.hta.+) {
            deny all;
			#internal;
        }
	
	## Protecting /admin/ and /downloader/
    #location /downloader    { allow 1.2.3.4; allow 1.2.3.4; deny all; rewrite ^/downloader/(.*)$ /downloader/index.php$1;} ## 1.2.3.4 = static ip addresses (www.whatismyip.com)
    #location /admin         { allow 1.2.3.4; allow 1.2.3.4; deny all; rewrite / /@handler;}
    #error_page 403 /403.html;
    #    location = /403.html {
    #    root /var/www/error;
    #    internal;
    #    access_log   /var/log/nginx/403.log  error403;
    #   }
	
	location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires max;
        log_not_found off;
        }
		
    location @handler {
        rewrite / /index.php;
        }
 
    location ~ .php/ { ## Forward paths like /js/index.php/x.js to relevant handler
        rewrite ^(.*.php)/ $1 last;
        }
 
    location ~ .php$ { ## Execute PHP scripts
        if (!-e $request_filename) { rewrite / /index.php last; } ## Catch 404s that try_files miss
		add_header X-Config-By 'MagenX -= www.magentomod.com =-';
        #expires        off;
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        #fastcgi_param  MAGE_RUN_CODE $storecode; ## Store code with multi domain
        fastcgi_param  MAGE_RUN_CODE default; 
        fastcgi_param  MAGE_RUN_TYPE store;
        include        fastcgi_params; ## See /etc/nginx/fastcgi_params
        }
}
}